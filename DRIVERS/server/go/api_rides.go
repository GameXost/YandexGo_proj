/*
 * Driver Service API
 *
 * API for managing drivers and ride operations
 *
 * API version: 2.0
 * Contact: sergejs.dyldin@yandex.ru
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"github.com/gin-gonic/gin"
)

type RidesAPI struct {
}

// Post /ride/:id/accept
// Accept a ride 
func (api *RidesAPI) AcceptRide(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /ride/:id/cancel
// Cancel a ride 
func (api *RidesAPI) CancelRide(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /ride/:id/complete
// Complete a ride 
func (api *RidesAPI) CompleteRide(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /driver/current_ride/:id
// Get current ride information 
func (api *RidesAPI) GetCurrentRide(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

