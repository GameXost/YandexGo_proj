// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: drivers.proto

package protos

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Driver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	CarModel      string                 `protobuf:"bytes,4,opt,name=car_model,json=carModel,proto3" json:"car_model,omitempty"`
	Email         string                 `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	CarColor      string                 `protobuf:"bytes,7,opt,name=car_color,json=carColor,proto3" json:"car_color,omitempty"`
	CarMark       string                 `protobuf:"bytes,8,opt,name=car_mark,json=carMark,proto3" json:"car_mark,omitempty"`
	CarNumber     string                 `protobuf:"bytes,9,opt,name=car_number,json=carNumber,proto3" json:"car_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_drivers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{0}
}

func (x *Driver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Driver) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Driver) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Driver) GetCarModel() string {
	if x != nil {
		return x.CarModel
	}
	return ""
}

func (x *Driver) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Driver) GetCarColor() string {
	if x != nil {
		return x.CarColor
	}
	return ""
}

func (x *Driver) GetCarMark() string {
	if x != nil {
		return x.CarMark
	}
	return ""
}

func (x *Driver) GetCarNumber() string {
	if x != nil {
		return x.CarNumber
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_drivers_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_drivers_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{2}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Ride struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	StartLocation *Location              `protobuf:"bytes,4,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation   *Location              `protobuf:"bytes,5,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     int64                  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ride) Reset() {
	*x = Ride{}
	mi := &file_drivers_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ride) ProtoMessage() {}

func (x *Ride) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ride.ProtoReflect.Descriptor instead.
func (*Ride) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{3}
}

func (x *Ride) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ride) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Ride) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Ride) GetStartLocation() *Location {
	if x != nil {
		return x.StartLocation
	}
	return nil
}

func (x *Ride) GetEndLocation() *Location {
	if x != nil {
		return x.EndLocation
	}
	return nil
}

func (x *Ride) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Ride) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AuthToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthToken) Reset() {
	*x = AuthToken{}
	mi := &file_drivers_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthToken) ProtoMessage() {}

func (x *AuthToken) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthToken.ProtoReflect.Descriptor instead.
func (*AuthToken) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{4}
}

func (x *AuthToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UpdateDriverProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Driver        *Driver                `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverProfileRequest) Reset() {
	*x = UpdateDriverProfileRequest{}
	mi := &file_drivers_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverProfileRequest) ProtoMessage() {}

func (x *UpdateDriverProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverProfileRequest) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDriverProfileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDriverProfileRequest) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

type RideIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideIdRequest) Reset() {
	*x = RideIdRequest{}
	mi := &file_drivers_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideIdRequest) ProtoMessage() {}

func (x *RideIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideIdRequest.ProtoReflect.Descriptor instead.
func (*RideIdRequest) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{6}
}

func (x *RideIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DriverIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverIdRequest) Reset() {
	*x = DriverIdRequest{}
	mi := &file_drivers_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverIdRequest) ProtoMessage() {}

func (x *DriverIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverIdRequest.ProtoReflect.Descriptor instead.
func (*DriverIdRequest) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{7}
}

func (x *DriverIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserIdRequest) Reset() {
	*x = UserIdRequest{}
	mi := &file_drivers_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdRequest) ProtoMessage() {}

func (x *UserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdRequest.ProtoReflect.Descriptor instead.
func (*UserIdRequest) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{8}
}

func (x *UserIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_drivers_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{9}
}

func (x *StatusResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RideHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rides         []*Ride                `protobuf:"bytes,1,rep,name=rides,proto3" json:"rides,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideHistoryResponse) Reset() {
	*x = RideHistoryResponse{}
	mi := &file_drivers_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideHistoryResponse) ProtoMessage() {}

func (x *RideHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideHistoryResponse.ProtoReflect.Descriptor instead.
func (*RideHistoryResponse) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{10}
}

func (x *RideHistoryResponse) GetRides() []*Ride {
	if x != nil {
		return x.Rides
	}
	return nil
}

type LocationUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Location      *Location              `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationUpdateRequest) Reset() {
	*x = LocationUpdateRequest{}
	mi := &file_drivers_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateRequest) ProtoMessage() {}

func (x *LocationUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateRequest.ProtoReflect.Descriptor instead.
func (*LocationUpdateRequest) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{11}
}

func (x *LocationUpdateRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *LocationUpdateRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type RideRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideRequests  []*RideRequest         `protobuf:"bytes,1,rep,name=ride_requests,json=rideRequests,proto3" json:"ride_requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideRequestsResponse) Reset() {
	*x = RideRequestsResponse{}
	mi := &file_drivers_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideRequestsResponse) ProtoMessage() {}

func (x *RideRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideRequestsResponse.ProtoReflect.Descriptor instead.
func (*RideRequestsResponse) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{12}
}

func (x *RideRequestsResponse) GetRideRequests() []*RideRequest {
	if x != nil {
		return x.RideRequests
	}
	return nil
}

type RideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartLocation *Location              `protobuf:"bytes,2,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation   *Location              `protobuf:"bytes,3,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideRequest) Reset() {
	*x = RideRequest{}
	mi := &file_drivers_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideRequest) ProtoMessage() {}

func (x *RideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivers_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideRequest.ProtoReflect.Descriptor instead.
func (*RideRequest) Descriptor() ([]byte, []int) {
	return file_drivers_proto_rawDescGZIP(), []int{13}
}

func (x *RideRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RideRequest) GetStartLocation() *Location {
	if x != nil {
		return x.StartLocation
	}
	return nil
}

func (x *RideRequest) GetEndLocation() *Location {
	if x != nil {
		return x.EndLocation
	}
	return nil
}

var File_drivers_proto protoreflect.FileDescriptor

const file_drivers_proto_rawDesc = "" +
	"\n" +
	"\rdrivers.proto\x12\x0edriver_service\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x89\x03\n" +
	"\x06Driver\x12.\n" +
	"\x02id\x18\x01 \x01(\tB\x1e\x92A\x1b2\x19Unic driver identificatorR\x02id\x124\n" +
	"\busername\x18\x02 \x01(\tB\x18\x92A\x152\x13Driver's first_nameR\busername\x12)\n" +
	"\x05phone\x18\x03 \x01(\tB\x13\x92A\x102\x0econtact numberR\x05phone\x12+\n" +
	"\tcar_model\x18\x04 \x01(\tB\x0e\x92A\v2\tCar modelR\bcarModel\x12(\n" +
	"\x05email\x18\x06 \x01(\tB\x12\x92A\x0f2\rEmail addressR\x05email\x12+\n" +
	"\tcar_color\x18\a \x01(\tB\x0e\x92A\v2\tCar colorR\bcarColor\x120\n" +
	"\bcar_mark\x18\b \x01(\tB\x15\x92A\x122\x10Car manufacturerR\acarMark\x128\n" +
	"\n" +
	"car_number\x18\t \x01(\tB\x19\x92A\x162\x14License plate numberR\tcarNumber\"\x95\x01\n" +
	"\x04User\x12.\n" +
	"\x02id\x18\x01 \x01(\tB\x1e\x92A\x1b2\x19Unic user's identificatorR\x02id\x122\n" +
	"\busername\x18\x02 \x01(\tB\x16\x92A\x132\x11USer's first nameR\busername\x12)\n" +
	"\x05phone\x18\x03 \x01(\tB\x13\x92A\x102\x0econtact numberR\x05phone\"y\n" +
	"\bLocation\x124\n" +
	"\blatitude\x18\x01 \x01(\x01B\x18\x92A\x152\bLatitudeJ\t55.755825R\blatitude\x127\n" +
	"\tlongitude\x18\x02 \x01(\x01B\x19\x92A\x162\tLongitudeJ\t37.617298R\tlongitude\"\xd1\x03\n" +
	"\x04Ride\x12$\n" +
	"\x02id\x18\x01 \x01(\tB\x14\x92A\x112\x0funic id of rideR\x02id\x12,\n" +
	"\auser_id\x18\x02 \x01(\tB\x13\x92A\x102\x0eunic user's idR\x06userId\x121\n" +
	"\tdriver_id\x18\x03 \x01(\tB\x14\x92A\x112\x0funic drivers idR\bdriverId\x12R\n" +
	"\x0estart_location\x18\x04 \x01(\v2\x18.driver_service.LocationB\x11\x92A\x0e2\fstart coordsR\rstartLocation\x12L\n" +
	"\fend_location\x18\x05 \x01(\v2\x18.driver_service.LocationB\x0f\x92A\f2\n" +
	"end coordsR\vendLocation\x12b\n" +
	"\x06status\x18\x06 \x01(\tBJ\x92AG2\vride status\xf2\x02\apending\xf2\x02\baccepted\xf2\x02\vin_progress\xf2\x02\tcompleted\xf2\x02\bcanceledR\x06status\x12<\n" +
	"\ttimestamp\x18\a \x01(\x03B\x1e\x92A\x1b2\x19time mark for start pointR\ttimestamp\"\xbd\x01\n" +
	"\tAuthToken\x12\x8b\x01\n" +
	"\x05token\x18\x01 \x01(\tBu\x92Ar2\x0eJWT auth tokenJ'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\x8a\x016^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_.+/=]*$R\x05token:\"\x92A\x1f\n" +
	"\x1d*\n" +
	"Auth Token2\x0fJWT auth tokern\"\x84\x01\n" +
	"\x1aUpdateDriverProfileRequest\x12\x1e\n" +
	"\x02id\x18\x01 \x01(\tB\x0e\x92A\v2\tDriver IDR\x02id\x12F\n" +
	"\x06driver\x18\x02 \x01(\v2\x16.driver_service.DriverB\x16\x92A\x132\x11New driver's dataR\x06driver\";\n" +
	"\rRideIdRequest\x12*\n" +
	"\x02id\x18\x01 \x01(\tB\x1a\x92A\x172\aRide IDJ\f\"ride_12345\"R\x02id\"[\n" +
	"\x0fDriverIdRequest\x12H\n" +
	"\x02id\x18\x01 \x01(\tB8\x92A52\vdriver's idJ&\"123e4567-e89b-12d3-a456-426614174000\"R\x02id\"=\n" +
	"\rUserIdRequest\x12,\n" +
	"\x02id\x18\x01 \x01(\tB\x1c\x92A\x192\tuser's idJ\f\"user_54321\"R\x02id\"b\n" +
	"\x0eStatusResponse\x12(\n" +
	"\x06status\x18\x01 \x01(\bB\x10\x92A\r2\vride statusR\x06status\x12&\n" +
	"\amessage\x18\x02 \x01(\tB\f\x92A\t2\adetailsR\amessage\"V\n" +
	"\x13RideHistoryResponse\x12?\n" +
	"\x05rides\x18\x01 \x03(\v2\x14.driver_service.RideB\x13\x92A\x102\x0eprevious ridesR\x05rides\"\x9d\x01\n" +
	"\x15LocationUpdateRequest\x129\n" +
	"\tdriver_id\x18\x01 \x01(\tB\x1c\x92A\x192\tDriver IDJ\f\"driver_123\"R\bdriverId\x12I\n" +
	"\blocation\x18\x02 \x01(\v2\x18.driver_service.LocationB\x13\x92A\x102\x0eupdated coordsR\blocation\"n\n" +
	"\x14RideRequestsResponse\x12V\n" +
	"\rride_requests\x18\x01 \x03(\v2\x1b.driver_service.RideRequestB\x14\x92A\x112\x0favailable ridesR\frideRequests\"\xfe\x01\n" +
	"\vRideRequest\x12M\n" +
	"\auser_id\x18\x01 \x01(\tB4\x92A12\aUser IDJ&\"123e4567-e89b-12d3-a456-426614174000\"R\x06userId\x12R\n" +
	"\x0estart_location\x18\x02 \x01(\v2\x18.driver_service.LocationB\x11\x92A\x0e2\fstart coordsR\rstartLocation\x12L\n" +
	"\fend_location\x18\x03 \x01(\v2\x18.driver_service.LocationB\x0f\x92A\f2\n" +
	"end coordsR\vendLocation2\x98\x11\n" +
	"\aDrivers\x12\xce\x01\n" +
	"\x10GetDriverProfile\x12\x19.driver_service.AuthToken\x1a\x16.driver_service.Driver\"\x86\x01\x92Al\n" +
	"\x06driver\x12\x12Get driver profile*\x10getDriverProfileJ.\n" +
	"\x03200\x12'\n" +
	"%Successfully retrieved driver profileb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x11\x12\x0f/driver/profile\x12\xe9\x01\n" +
	"\x13UpdateDriverProfile\x12*.driver_service.UpdateDriverProfileRequest\x1a\x16.driver_service.Driver\"\x8d\x01\x92Ap\n" +
	"\x06driver\x12\x15Update driver profile*\x13updateDriverProfileJ,\n" +
	"\x03200\x12%\n" +
	"#Successfully updated driver profileb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x14:\x01*\x1a\x0f/driver/profile\x12\xbe\x01\n" +
	"\n" +
	"AcceptRide\x12\x1d.driver_service.RideIdRequest\x1a\x1e.driver_service.StatusResponse\"q\x92AU\n" +
	"\x05rides\x12\rAccept a ride*\n" +
	"acceptRideJ#\n" +
	"\x03200\x12\x1c\n" +
	"\x1aRide accepted successfullyb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x13\"\x11/ride/{id}/accept\x12\xc7\x01\n" +
	"\fCompleteRide\x12\x1d.driver_service.RideIdRequest\x1a\x1e.driver_service.StatusResponse\"x\x92AZ\n" +
	"\x05rides\x12\x0fComplete a ride*\fcompleteRideJ$\n" +
	"\x03200\x12\x1d\n" +
	"\x1bRide completed successfullyb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x15\"\x13/ride/{id}/complete\x12\xbe\x01\n" +
	"\n" +
	"CancelRide\x12\x1d.driver_service.RideIdRequest\x1a\x1e.driver_service.StatusResponse\"q\x92AU\n" +
	"\x05rides\x12\rCancel a ride*\n" +
	"cancelRideJ#\n" +
	"\x03200\x12\x1c\n" +
	"\x1aRide canceled successfullyb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x13\"\x11/ride/{id}/cancel\x12\xde\x01\n" +
	"\x0eGetCurrentRide\x12\x1f.driver_service.DriverIdRequest\x1a\x14.driver_service.Ride\"\x94\x01\x92Ap\n" +
	"\x05rides\x12\x1cGet current ride information*\x0egetCurrentRideJ+\n" +
	"\x03200\x12$\n" +
	"\"Successfully received current rideb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x1b\x12\x19/driver/current_ride/{id}\x12\xf7\x01\n" +
	"\x0eUpdateLocation\x12%.driver_service.LocationUpdateRequest\x1a\x1e.driver_service.StatusResponse\"\x9b\x01\x92A}\n" +
	"\blocation\x12\"Update driver location (streaming)*\x0eupdateLocationJ/\n" +
	"\x03200\x12(\n" +
	"&Location updates received successfullyb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/driver/location(\x01\x12\xe9\x01\n" +
	"\x11GetNearbyRequests\x12\x18.driver_service.Location\x1a$.driver_service.RideRequestsResponse\"\x93\x01\x92Av\n" +
	"\blocation\x12\x18Get nearby ride requests*\x11getNearbyRequestsJ/\n" +
	"\x03200\x12(\n" +
	"&Successfully retrieved nearby requestsb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x14\x12\x12/driver/nearby_req\x12\xd6\x01\n" +
	"\x10GetPassengerInfo\x12\x1d.driver_service.UserIdRequest\x1a\x14.driver_service.User\"\x8c\x01\x92Aw\n" +
	"\n" +
	"passengers\x12\x19Get passenger information*\x10getPassengerInfoJ.\n" +
	"\x03200\x12'\n" +
	"%Successfully retrieved passenger infob\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/user/{id}\x12\xe3\x01\n" +
	"\x0eGetRideHistory\x12\x1f.driver_service.DriverIdRequest\x1a#.driver_service.RideHistoryResponse\"\x8a\x01\x92Am\n" +
	"\x05rides\x12\x19Get driver's ride history*\x0egetRideHistoryJ+\n" +
	"\x03200\x12$\n" +
	"\"Successfully received ride historyb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00\x82\xd3\xe4\x93\x02\x14\x12\x12/driver/{id}/ridesB\xa7\x03\x92A\xe4\x02\x12\xe5\x01\n" +
	"\x12Driver Service API\x12,API for managing drivers and ride operations\"\\\n" +
	"\x15YandexGo Project Team\x12)https://github.com/GameXost/YandexGo_proj\x1a\x18sergejs.dyldin@yandex.ru*>\n" +
	"\n" +
	"Apache 2.0\x120https://www.apache.org/licenses/LICENSE-2.0.html2\x032.0*\x01\x022\x10application/json:\x10application/jsonZE\n" +
	"C\n" +
	"\x06OAuth2\x129\b\x03(\x03:\tJWT/tokenB(\n" +
	"&\n" +
	"\tdrive-api\x12\x19access to driver servicesb\f\n" +
	"\n" +
	"\n" +
	"\x06OAuth2\x12\x00Z=github.com/GameXost/YandexGo_proj/tree/gRPCservice/API/protosb\x06proto3"

var (
	file_drivers_proto_rawDescOnce sync.Once
	file_drivers_proto_rawDescData []byte
)

func file_drivers_proto_rawDescGZIP() []byte {
	file_drivers_proto_rawDescOnce.Do(func() {
		file_drivers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_drivers_proto_rawDesc), len(file_drivers_proto_rawDesc)))
	})
	return file_drivers_proto_rawDescData
}

var file_drivers_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_drivers_proto_goTypes = []any{
	(*Driver)(nil),                     // 0: driver_service.Driver
	(*User)(nil),                       // 1: driver_service.User
	(*Location)(nil),                   // 2: driver_service.Location
	(*Ride)(nil),                       // 3: driver_service.Ride
	(*AuthToken)(nil),                  // 4: driver_service.AuthToken
	(*UpdateDriverProfileRequest)(nil), // 5: driver_service.UpdateDriverProfileRequest
	(*RideIdRequest)(nil),              // 6: driver_service.RideIdRequest
	(*DriverIdRequest)(nil),            // 7: driver_service.DriverIdRequest
	(*UserIdRequest)(nil),              // 8: driver_service.UserIdRequest
	(*StatusResponse)(nil),             // 9: driver_service.StatusResponse
	(*RideHistoryResponse)(nil),        // 10: driver_service.RideHistoryResponse
	(*LocationUpdateRequest)(nil),      // 11: driver_service.LocationUpdateRequest
	(*RideRequestsResponse)(nil),       // 12: driver_service.RideRequestsResponse
	(*RideRequest)(nil),                // 13: driver_service.RideRequest
}
var file_drivers_proto_depIdxs = []int32{
	2,  // 0: driver_service.Ride.start_location:type_name -> driver_service.Location
	2,  // 1: driver_service.Ride.end_location:type_name -> driver_service.Location
	0,  // 2: driver_service.UpdateDriverProfileRequest.driver:type_name -> driver_service.Driver
	3,  // 3: driver_service.RideHistoryResponse.rides:type_name -> driver_service.Ride
	2,  // 4: driver_service.LocationUpdateRequest.location:type_name -> driver_service.Location
	13, // 5: driver_service.RideRequestsResponse.ride_requests:type_name -> driver_service.RideRequest
	2,  // 6: driver_service.RideRequest.start_location:type_name -> driver_service.Location
	2,  // 7: driver_service.RideRequest.end_location:type_name -> driver_service.Location
	4,  // 8: driver_service.Drivers.GetDriverProfile:input_type -> driver_service.AuthToken
	5,  // 9: driver_service.Drivers.UpdateDriverProfile:input_type -> driver_service.UpdateDriverProfileRequest
	6,  // 10: driver_service.Drivers.AcceptRide:input_type -> driver_service.RideIdRequest
	6,  // 11: driver_service.Drivers.CompleteRide:input_type -> driver_service.RideIdRequest
	6,  // 12: driver_service.Drivers.CancelRide:input_type -> driver_service.RideIdRequest
	7,  // 13: driver_service.Drivers.GetCurrentRide:input_type -> driver_service.DriverIdRequest
	11, // 14: driver_service.Drivers.UpdateLocation:input_type -> driver_service.LocationUpdateRequest
	2,  // 15: driver_service.Drivers.GetNearbyRequests:input_type -> driver_service.Location
	8,  // 16: driver_service.Drivers.GetPassengerInfo:input_type -> driver_service.UserIdRequest
	7,  // 17: driver_service.Drivers.GetRideHistory:input_type -> driver_service.DriverIdRequest
	0,  // 18: driver_service.Drivers.GetDriverProfile:output_type -> driver_service.Driver
	0,  // 19: driver_service.Drivers.UpdateDriverProfile:output_type -> driver_service.Driver
	9,  // 20: driver_service.Drivers.AcceptRide:output_type -> driver_service.StatusResponse
	9,  // 21: driver_service.Drivers.CompleteRide:output_type -> driver_service.StatusResponse
	9,  // 22: driver_service.Drivers.CancelRide:output_type -> driver_service.StatusResponse
	3,  // 23: driver_service.Drivers.GetCurrentRide:output_type -> driver_service.Ride
	9,  // 24: driver_service.Drivers.UpdateLocation:output_type -> driver_service.StatusResponse
	12, // 25: driver_service.Drivers.GetNearbyRequests:output_type -> driver_service.RideRequestsResponse
	1,  // 26: driver_service.Drivers.GetPassengerInfo:output_type -> driver_service.User
	10, // 27: driver_service.Drivers.GetRideHistory:output_type -> driver_service.RideHistoryResponse
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_drivers_proto_init() }
func file_drivers_proto_init() {
	if File_drivers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_drivers_proto_rawDesc), len(file_drivers_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_drivers_proto_goTypes,
		DependencyIndexes: file_drivers_proto_depIdxs,
		MessageInfos:      file_drivers_proto_msgTypes,
	}.Build()
	File_drivers_proto = out.File
	file_drivers_proto_goTypes = nil
	file_drivers_proto_depIdxs = nil
}
