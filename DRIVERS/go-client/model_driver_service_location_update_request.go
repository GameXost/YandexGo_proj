/*
Driver Service API

API for managing drivers and ride operations

API version: 2.0
Contact: sergejs.dyldin@yandex.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DriverServiceLocationUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriverServiceLocationUpdateRequest{}

// DriverServiceLocationUpdateRequest struct for DriverServiceLocationUpdateRequest
type DriverServiceLocationUpdateRequest struct {
	// Driver ID
	DriverId *string `json:"driverId,omitempty"`
	Location *DriverServiceLocation `json:"location,omitempty"`
}

// NewDriverServiceLocationUpdateRequest instantiates a new DriverServiceLocationUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverServiceLocationUpdateRequest() *DriverServiceLocationUpdateRequest {
	this := DriverServiceLocationUpdateRequest{}
	return &this
}

// NewDriverServiceLocationUpdateRequestWithDefaults instantiates a new DriverServiceLocationUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverServiceLocationUpdateRequestWithDefaults() *DriverServiceLocationUpdateRequest {
	this := DriverServiceLocationUpdateRequest{}
	return &this
}

// GetDriverId returns the DriverId field value if set, zero value otherwise.
func (o *DriverServiceLocationUpdateRequest) GetDriverId() string {
	if o == nil || IsNil(o.DriverId) {
		var ret string
		return ret
	}
	return *o.DriverId
}

// GetDriverIdOk returns a tuple with the DriverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceLocationUpdateRequest) GetDriverIdOk() (*string, bool) {
	if o == nil || IsNil(o.DriverId) {
		return nil, false
	}
	return o.DriverId, true
}

// HasDriverId returns a boolean if a field has been set.
func (o *DriverServiceLocationUpdateRequest) HasDriverId() bool {
	if o != nil && !IsNil(o.DriverId) {
		return true
	}

	return false
}

// SetDriverId gets a reference to the given string and assigns it to the DriverId field.
func (o *DriverServiceLocationUpdateRequest) SetDriverId(v string) {
	o.DriverId = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *DriverServiceLocationUpdateRequest) GetLocation() DriverServiceLocation {
	if o == nil || IsNil(o.Location) {
		var ret DriverServiceLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceLocationUpdateRequest) GetLocationOk() (*DriverServiceLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *DriverServiceLocationUpdateRequest) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given DriverServiceLocation and assigns it to the Location field.
func (o *DriverServiceLocationUpdateRequest) SetLocation(v DriverServiceLocation) {
	o.Location = &v
}

func (o DriverServiceLocationUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriverServiceLocationUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DriverId) {
		toSerialize["driverId"] = o.DriverId
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return toSerialize, nil
}

type NullableDriverServiceLocationUpdateRequest struct {
	value *DriverServiceLocationUpdateRequest
	isSet bool
}

func (v NullableDriverServiceLocationUpdateRequest) Get() *DriverServiceLocationUpdateRequest {
	return v.value
}

func (v *NullableDriverServiceLocationUpdateRequest) Set(val *DriverServiceLocationUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverServiceLocationUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverServiceLocationUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverServiceLocationUpdateRequest(val *DriverServiceLocationUpdateRequest) *NullableDriverServiceLocationUpdateRequest {
	return &NullableDriverServiceLocationUpdateRequest{value: val, isSet: true}
}

func (v NullableDriverServiceLocationUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverServiceLocationUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


