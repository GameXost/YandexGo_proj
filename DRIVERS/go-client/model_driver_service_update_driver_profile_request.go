/*
DRIVER Service API

API for managing drivers and ride operations

API version: 2.0
Contact: sergejs.dyldin@yandex.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the DriverServiceUpdateDriverProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriverServiceUpdateDriverProfileRequest{}

// DriverServiceUpdateDriverProfileRequest struct for DriverServiceUpdateDriverProfileRequest
type DriverServiceUpdateDriverProfileRequest struct {
	// Driver ID
	Id *string `json:"id,omitempty"`
	Driver *DriverServiceDriver `json:"driver,omitempty"`
}

// NewDriverServiceUpdateDriverProfileRequest instantiates a new DriverServiceUpdateDriverProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverServiceUpdateDriverProfileRequest() *DriverServiceUpdateDriverProfileRequest {
	this := DriverServiceUpdateDriverProfileRequest{}
	return &this
}

// NewDriverServiceUpdateDriverProfileRequestWithDefaults instantiates a new DriverServiceUpdateDriverProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverServiceUpdateDriverProfileRequestWithDefaults() *DriverServiceUpdateDriverProfileRequest {
	this := DriverServiceUpdateDriverProfileRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DriverServiceUpdateDriverProfileRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceUpdateDriverProfileRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DriverServiceUpdateDriverProfileRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DriverServiceUpdateDriverProfileRequest) SetId(v string) {
	o.Id = &v
}

// GetDriver returns the Driver field value if set, zero value otherwise.
func (o *DriverServiceUpdateDriverProfileRequest) GetDriver() DriverServiceDriver {
	if o == nil || IsNil(o.Driver) {
		var ret DriverServiceDriver
		return ret
	}
	return *o.Driver
}

// GetDriverOk returns a tuple with the Driver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceUpdateDriverProfileRequest) GetDriverOk() (*DriverServiceDriver, bool) {
	if o == nil || IsNil(o.Driver) {
		return nil, false
	}
	return o.Driver, true
}

// HasDriver returns a boolean if a field has been set.
func (o *DriverServiceUpdateDriverProfileRequest) HasDriver() bool {
	if o != nil && !IsNil(o.Driver) {
		return true
	}

	return false
}

// SetDriver gets a reference to the given DriverServiceDriver and assigns it to the Driver field.
func (o *DriverServiceUpdateDriverProfileRequest) SetDriver(v DriverServiceDriver) {
	o.Driver = &v
}

func (o DriverServiceUpdateDriverProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriverServiceUpdateDriverProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Driver) {
		toSerialize["driver"] = o.Driver
	}
	return toSerialize, nil
}

type NullableDriverServiceUpdateDriverProfileRequest struct {
	value *DriverServiceUpdateDriverProfileRequest
	isSet bool
}

func (v NullableDriverServiceUpdateDriverProfileRequest) Get() *DriverServiceUpdateDriverProfileRequest {
	return v.value
}

func (v *NullableDriverServiceUpdateDriverProfileRequest) Set(val *DriverServiceUpdateDriverProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverServiceUpdateDriverProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverServiceUpdateDriverProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverServiceUpdateDriverProfileRequest(val *DriverServiceUpdateDriverProfileRequest) *NullableDriverServiceUpdateDriverProfileRequest {
	return &NullableDriverServiceUpdateDriverProfileRequest{value: val, isSet: true}
}

func (v NullableDriverServiceUpdateDriverProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverServiceUpdateDriverProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


