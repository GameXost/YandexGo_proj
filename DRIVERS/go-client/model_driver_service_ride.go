/*
DRIVER Service API

API for managing drivers and ride operations

API version: 2.0
Contact: sergejs.dyldin@yandex.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the DriverServiceRide type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriverServiceRide{}

// DriverServiceRide struct for DriverServiceRide
type DriverServiceRide struct {
	// unic id of ride
	Id *string `json:"id,omitempty"`
	// unic user's id
	UserId *string `json:"userId,omitempty"`
	// unic drivers id
	DriverId *string `json:"driverId,omitempty"`
	StartLocation *DriverServiceLocation `json:"startLocation,omitempty"`
	EndLocation *DriverServiceLocation `json:"endLocation,omitempty"`
	// ride status
	Status *string `json:"status,omitempty"`
	// time mark for start point
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewDriverServiceRide instantiates a new DriverServiceRide object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverServiceRide() *DriverServiceRide {
	this := DriverServiceRide{}
	return &this
}

// NewDriverServiceRideWithDefaults instantiates a new DriverServiceRide object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverServiceRideWithDefaults() *DriverServiceRide {
	this := DriverServiceRide{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DriverServiceRide) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRide) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DriverServiceRide) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DriverServiceRide) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DriverServiceRide) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRide) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DriverServiceRide) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *DriverServiceRide) SetUserId(v string) {
	o.UserId = &v
}

// GetDriverId returns the DriverId field value if set, zero value otherwise.
func (o *DriverServiceRide) GetDriverId() string {
	if o == nil || IsNil(o.DriverId) {
		var ret string
		return ret
	}
	return *o.DriverId
}

// GetDriverIdOk returns a tuple with the DriverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRide) GetDriverIdOk() (*string, bool) {
	if o == nil || IsNil(o.DriverId) {
		return nil, false
	}
	return o.DriverId, true
}

// HasDriverId returns a boolean if a field has been set.
func (o *DriverServiceRide) HasDriverId() bool {
	if o != nil && !IsNil(o.DriverId) {
		return true
	}

	return false
}

// SetDriverId gets a reference to the given string and assigns it to the DriverId field.
func (o *DriverServiceRide) SetDriverId(v string) {
	o.DriverId = &v
}

// GetStartLocation returns the StartLocation field value if set, zero value otherwise.
func (o *DriverServiceRide) GetStartLocation() DriverServiceLocation {
	if o == nil || IsNil(o.StartLocation) {
		var ret DriverServiceLocation
		return ret
	}
	return *o.StartLocation
}

// GetStartLocationOk returns a tuple with the StartLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRide) GetStartLocationOk() (*DriverServiceLocation, bool) {
	if o == nil || IsNil(o.StartLocation) {
		return nil, false
	}
	return o.StartLocation, true
}

// HasStartLocation returns a boolean if a field has been set.
func (o *DriverServiceRide) HasStartLocation() bool {
	if o != nil && !IsNil(o.StartLocation) {
		return true
	}

	return false
}

// SetStartLocation gets a reference to the given DriverServiceLocation and assigns it to the StartLocation field.
func (o *DriverServiceRide) SetStartLocation(v DriverServiceLocation) {
	o.StartLocation = &v
}

// GetEndLocation returns the EndLocation field value if set, zero value otherwise.
func (o *DriverServiceRide) GetEndLocation() DriverServiceLocation {
	if o == nil || IsNil(o.EndLocation) {
		var ret DriverServiceLocation
		return ret
	}
	return *o.EndLocation
}

// GetEndLocationOk returns a tuple with the EndLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRide) GetEndLocationOk() (*DriverServiceLocation, bool) {
	if o == nil || IsNil(o.EndLocation) {
		return nil, false
	}
	return o.EndLocation, true
}

// HasEndLocation returns a boolean if a field has been set.
func (o *DriverServiceRide) HasEndLocation() bool {
	if o != nil && !IsNil(o.EndLocation) {
		return true
	}

	return false
}

// SetEndLocation gets a reference to the given DriverServiceLocation and assigns it to the EndLocation field.
func (o *DriverServiceRide) SetEndLocation(v DriverServiceLocation) {
	o.EndLocation = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DriverServiceRide) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRide) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DriverServiceRide) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DriverServiceRide) SetStatus(v string) {
	o.Status = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DriverServiceRide) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRide) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DriverServiceRide) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *DriverServiceRide) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o DriverServiceRide) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriverServiceRide) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.DriverId) {
		toSerialize["driverId"] = o.DriverId
	}
	if !IsNil(o.StartLocation) {
		toSerialize["startLocation"] = o.StartLocation
	}
	if !IsNil(o.EndLocation) {
		toSerialize["endLocation"] = o.EndLocation
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableDriverServiceRide struct {
	value *DriverServiceRide
	isSet bool
}

func (v NullableDriverServiceRide) Get() *DriverServiceRide {
	return v.value
}

func (v *NullableDriverServiceRide) Set(val *DriverServiceRide) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverServiceRide) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverServiceRide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverServiceRide(val *DriverServiceRide) *NullableDriverServiceRide {
	return &NullableDriverServiceRide{value: val, isSet: true}
}

func (v NullableDriverServiceRide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverServiceRide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


