/*
Driver Service API

API for managing drivers and ride operations

API version: 2.0
Contact: sergejs.dyldin@yandex.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the DriverServiceRideHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriverServiceRideHistoryResponse{}

// DriverServiceRideHistoryResponse struct for DriverServiceRideHistoryResponse
type DriverServiceRideHistoryResponse struct {
	// previous rides
	Rides []DriverServiceRide `json:"rides,omitempty"`
}

// NewDriverServiceRideHistoryResponse instantiates a new DriverServiceRideHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverServiceRideHistoryResponse() *DriverServiceRideHistoryResponse {
	this := DriverServiceRideHistoryResponse{}
	return &this
}

// NewDriverServiceRideHistoryResponseWithDefaults instantiates a new DriverServiceRideHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverServiceRideHistoryResponseWithDefaults() *DriverServiceRideHistoryResponse {
	this := DriverServiceRideHistoryResponse{}
	return &this
}

// GetRides returns the Rides field value if set, zero value otherwise.
func (o *DriverServiceRideHistoryResponse) GetRides() []DriverServiceRide {
	if o == nil || IsNil(o.Rides) {
		var ret []DriverServiceRide
		return ret
	}
	return o.Rides
}

// GetRidesOk returns a tuple with the Rides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceRideHistoryResponse) GetRidesOk() ([]DriverServiceRide, bool) {
	if o == nil || IsNil(o.Rides) {
		return nil, false
	}
	return o.Rides, true
}

// HasRides returns a boolean if a field has been set.
func (o *DriverServiceRideHistoryResponse) HasRides() bool {
	if o != nil && !IsNil(o.Rides) {
		return true
	}

	return false
}

// SetRides gets a reference to the given []DriverServiceRide and assigns it to the Rides field.
func (o *DriverServiceRideHistoryResponse) SetRides(v []DriverServiceRide) {
	o.Rides = v
}

func (o DriverServiceRideHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriverServiceRideHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rides) {
		toSerialize["rides"] = o.Rides
	}
	return toSerialize, nil
}

type NullableDriverServiceRideHistoryResponse struct {
	value *DriverServiceRideHistoryResponse
	isSet bool
}

func (v NullableDriverServiceRideHistoryResponse) Get() *DriverServiceRideHistoryResponse {
	return v.value
}

func (v *NullableDriverServiceRideHistoryResponse) Set(val *DriverServiceRideHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverServiceRideHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverServiceRideHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverServiceRideHistoryResponse(val *DriverServiceRideHistoryResponse) *NullableDriverServiceRideHistoryResponse {
	return &NullableDriverServiceRideHistoryResponse{value: val, isSet: true}
}

func (v NullableDriverServiceRideHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverServiceRideHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


