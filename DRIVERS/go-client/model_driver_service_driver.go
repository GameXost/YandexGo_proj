/*
Driver Service API

API for managing drivers and ride operations

API version: 2.0
Contact: sergejs.dyldin@yandex.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the DriverServiceDriver type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriverServiceDriver{}

// DriverServiceDriver struct for DriverServiceDriver
type DriverServiceDriver struct {
	// Unic driver identificator
	Id *string `json:"id,omitempty"`
	// Driver's first_name
	Username *string `json:"username,omitempty"`
	// contact number
	Phone *string `json:"phone,omitempty"`
	// Car model
	CarModel *string `json:"carModel,omitempty"`
	// Email address
	Email *string `json:"email,omitempty"`
	// Car color
	CarColor *string `json:"carColor,omitempty"`
	// Car manufacturer
	CarMark *string `json:"carMark,omitempty"`
	// License plate number
	CarNumber *string `json:"carNumber,omitempty"`
}

// NewDriverServiceDriver instantiates a new DriverServiceDriver object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverServiceDriver() *DriverServiceDriver {
	this := DriverServiceDriver{}
	return &this
}

// NewDriverServiceDriverWithDefaults instantiates a new DriverServiceDriver object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverServiceDriverWithDefaults() *DriverServiceDriver {
	this := DriverServiceDriver{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DriverServiceDriver) SetId(v string) {
	o.Id = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *DriverServiceDriver) SetUsername(v string) {
	o.Username = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *DriverServiceDriver) SetPhone(v string) {
	o.Phone = &v
}

// GetCarModel returns the CarModel field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetCarModel() string {
	if o == nil || IsNil(o.CarModel) {
		var ret string
		return ret
	}
	return *o.CarModel
}

// GetCarModelOk returns a tuple with the CarModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetCarModelOk() (*string, bool) {
	if o == nil || IsNil(o.CarModel) {
		return nil, false
	}
	return o.CarModel, true
}

// HasCarModel returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasCarModel() bool {
	if o != nil && !IsNil(o.CarModel) {
		return true
	}

	return false
}

// SetCarModel gets a reference to the given string and assigns it to the CarModel field.
func (o *DriverServiceDriver) SetCarModel(v string) {
	o.CarModel = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *DriverServiceDriver) SetEmail(v string) {
	o.Email = &v
}

// GetCarColor returns the CarColor field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetCarColor() string {
	if o == nil || IsNil(o.CarColor) {
		var ret string
		return ret
	}
	return *o.CarColor
}

// GetCarColorOk returns a tuple with the CarColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetCarColorOk() (*string, bool) {
	if o == nil || IsNil(o.CarColor) {
		return nil, false
	}
	return o.CarColor, true
}

// HasCarColor returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasCarColor() bool {
	if o != nil && !IsNil(o.CarColor) {
		return true
	}

	return false
}

// SetCarColor gets a reference to the given string and assigns it to the CarColor field.
func (o *DriverServiceDriver) SetCarColor(v string) {
	o.CarColor = &v
}

// GetCarMark returns the CarMark field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetCarMark() string {
	if o == nil || IsNil(o.CarMark) {
		var ret string
		return ret
	}
	return *o.CarMark
}

// GetCarMarkOk returns a tuple with the CarMark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetCarMarkOk() (*string, bool) {
	if o == nil || IsNil(o.CarMark) {
		return nil, false
	}
	return o.CarMark, true
}

// HasCarMark returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasCarMark() bool {
	if o != nil && !IsNil(o.CarMark) {
		return true
	}

	return false
}

// SetCarMark gets a reference to the given string and assigns it to the CarMark field.
func (o *DriverServiceDriver) SetCarMark(v string) {
	o.CarMark = &v
}

// GetCarNumber returns the CarNumber field value if set, zero value otherwise.
func (o *DriverServiceDriver) GetCarNumber() string {
	if o == nil || IsNil(o.CarNumber) {
		var ret string
		return ret
	}
	return *o.CarNumber
}

// GetCarNumberOk returns a tuple with the CarNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverServiceDriver) GetCarNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CarNumber) {
		return nil, false
	}
	return o.CarNumber, true
}

// HasCarNumber returns a boolean if a field has been set.
func (o *DriverServiceDriver) HasCarNumber() bool {
	if o != nil && !IsNil(o.CarNumber) {
		return true
	}

	return false
}

// SetCarNumber gets a reference to the given string and assigns it to the CarNumber field.
func (o *DriverServiceDriver) SetCarNumber(v string) {
	o.CarNumber = &v
}

func (o DriverServiceDriver) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriverServiceDriver) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.CarModel) {
		toSerialize["carModel"] = o.CarModel
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CarColor) {
		toSerialize["carColor"] = o.CarColor
	}
	if !IsNil(o.CarMark) {
		toSerialize["carMark"] = o.CarMark
	}
	if !IsNil(o.CarNumber) {
		toSerialize["carNumber"] = o.CarNumber
	}
	return toSerialize, nil
}

type NullableDriverServiceDriver struct {
	value *DriverServiceDriver
	isSet bool
}

func (v NullableDriverServiceDriver) Get() *DriverServiceDriver {
	return v.value
}

func (v *NullableDriverServiceDriver) Set(val *DriverServiceDriver) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverServiceDriver) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverServiceDriver) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverServiceDriver(val *DriverServiceDriver) *NullableDriverServiceDriver {
	return &NullableDriverServiceDriver{value: val, isSet: true}
}

func (v NullableDriverServiceDriver) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverServiceDriver) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


