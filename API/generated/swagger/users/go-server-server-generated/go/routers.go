/*
 * clients.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: version not set
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"ClientCancelRide",
		strings.ToUpper("Post"),
		"/ride/{id}/cancel",
		ClientCancelRide,
	},

	Route{
		"ClientGetDriverInfo",
		strings.ToUpper("Get"),
		"/driver/{id}",
		ClientGetDriverInfo,
	},

	Route{
		"ClientGetDriverLocation",
		strings.ToUpper("Get"),
		"/driver/{id}/location",
		ClientGetDriverLocation,
	},

	Route{
		"ClientGetRideHistory",
		strings.ToUpper("Get"),
		"/ride/history",
		ClientGetRideHistory,
	},

	Route{
		"ClientGetRideStatus",
		strings.ToUpper("Get"),
		"/ride/{id}",
		ClientGetRideStatus,
	},

	Route{
		"ClientGetUserProfile",
		strings.ToUpper("Get"),
		"/user/profile",
		ClientGetUserProfile,
	},

	Route{
		"ClientRequestRide",
		strings.ToUpper("Post"),
		"/ride/request",
		ClientRequestRide,
	},

	Route{
		"ClientUpdateUserProfile",
		strings.ToUpper("Put"),
		"/user/profile",
		ClientUpdateUserProfile,
	},
}
