syntax ="proto3";

package driver_service;

option go_package = "github.com/GameXost/YandexGo_proj/tree/gRPCservice/grpc_services/proto_files";
import "google/api/annotations.proto";



service Drivers {
    // операции с профилем водителя
    rpc GetDriverProfile(AuthToken) returns (Driver){}
    rpc UpdateDriverProfile(UpdateDriverProfileRequest) returns (Driver){}

    // операции с заказами
    rpc AcceptRide(RideIdRequest) returns (StatusResponse){}
    rpc CompleteRide(RideIdRequest) returns (StatusResponse){}
    rpc CancelRide(RideIdRequest) returns (StatusResponse){}
    rpc GetCurrentRide(DriverIdRequest) returns (Ride){}
    rpc GetRideHistory(DriverIdRequest) returns (RideHistoryResponse){}

    // операции с местоположением
    rpc UpdateLocation(stream LocationUpdateRequest) returns (StatusResponse){}
    rpc GetNearbyRequests(Location) returns (RideRequestsResponse){}

    // сведения о пассажире
    rpc GetPassengerInfo(UserIdRequest) returns (User){}
}

// основные структуры
message Driver {
    string id = 1;
    string username = 2;
    string phone = 3;
    string car_model = 4;
    Location location = 5;
    string email = 6;
}

message User {
    string id = 1;
    string username = 2;
    string phone = 3;
}

message Location {
    double latitude = 1;
    double longitude = 2;
}

message Ride {
    string id = 1;
    string user_id = 2;
    string driver_id = 3;
    Location start_location = 4;
    Location end_location = 5;
    string status = 6;
    int64 timestamp = 7;
}

// основные операции
message AuthToken {
    string token = 1;
}

message UpdateDriverProfileRequest {
    string id = 1;
    string username = 2;
    string phone = 3;
    string car_model = 4;
    string email = 5;
}

message RideIdRequest {
    string id = 1;
}

message DriverIdRequest {
    string id = 1;
}

message UserIdRequest {
    string id = 1;
}

message StatusResponse {
    bool status = 1;
    string message = 2;
}

message RideHistoryResponse {
    repeated Ride rides = 1;
}

message LocationUpdateRequest {
    string driver_id = 1;
    Location location = 2;
}

message RideRequestsResponse {
    repeated RideRequest ride_requests = 1;
}

message RideRequest {
    string user_id = 1;
    Location start_location = 2;
    Location end_location = 3;
}
