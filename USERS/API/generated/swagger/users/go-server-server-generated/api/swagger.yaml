openapi: 3.0.1
info:
  title: clients.proto
  version: version not set
servers:
- url: /
tags:
- name: Client
paths:
  /driver/{id}:
    get:
      tags:
      - Client
      operationId: Client_GetDriverInfo
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceDriver"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /driver/{id}/location:
    get:
      tags:
      - Client
      summary: сведения о водителе
      operationId: Client_GetDriverLocation
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceLocation"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /ride/history:
    get:
      tags:
      - Client
      operationId: Client_GetRideHistory
      parameters:
      - name: id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceRideHistoryResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /ride/request:
    post:
      tags:
      - Client
      summary: операции с заказами
      operationId: Client_RequestRide
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/client_serviceRideRequest"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceRide"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  /ride/{id}:
    get:
      tags:
      - Client
      operationId: Client_GetRideStatus
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceRide"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /ride/{id}/cancel:
    post:
      tags:
      - Client
      operationId: Client_CancelRide
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceStatusResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /user/profile:
    get:
      tags:
      - Client
      summary: операции с пользовательским профилем
      operationId: Client_GetUserProfile
      parameters:
      - name: token
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceUser"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    put:
      tags:
      - Client
      operationId: Client_UpdateUserProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/client_serviceUpdateProfileRequest"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client_serviceUser"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
components:
  schemas:
    client_serviceDriver:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        phone:
          type: string
        carModel:
          type: string
        location:
          $ref: "#/components/schemas/client_serviceLocation"
      example:
        phone: phone
        location:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
        id: id
        username: username
        carModel: carModel
    client_serviceLocation:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      example:
        latitude: 0.8008281904610115
        longitude: 6.027456183070403
    client_serviceRide:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        driverId:
          type: string
        startLocation:
          $ref: "#/components/schemas/client_serviceLocation"
        endLocation:
          $ref: "#/components/schemas/client_serviceLocation"
        status:
          type: string
        timestamp:
          type: string
          format: int64
      example:
        driverId: driverId
        startLocation:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
        id: id
        userId: userId
        endLocation: null
        status: status
        timestamp: timestamp
    client_serviceRideHistoryResponse:
      type: object
      properties:
        rides:
          type: array
          items:
            $ref: "#/components/schemas/client_serviceRide"
      example:
        rides:
        - driverId: driverId
          startLocation:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          id: id
          userId: userId
          endLocation: null
          status: status
          timestamp: timestamp
        - driverId: driverId
          startLocation:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          id: id
          userId: userId
          endLocation: null
          status: status
          timestamp: timestamp
    client_serviceRideRequest:
      type: object
      properties:
        userId:
          type: string
        startLocation:
          $ref: "#/components/schemas/client_serviceLocation"
        endLocation:
          $ref: "#/components/schemas/client_serviceLocation"
    client_serviceStatusResponse:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
      example:
        message: message
        status: true
    client_serviceUpdateProfileRequest:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        phone:
          type: string
        email:
          type: string
    client_serviceUser:
      title: основные структуры
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        phone:
          type: string
      example:
        phone: phone
        id: id
        email: email
        username: username
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
      x-schema-name: protobufAny
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/protobufAny"
x-original-swagger-version: "2.0"
