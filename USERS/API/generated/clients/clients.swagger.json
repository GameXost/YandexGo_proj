{
  "swagger": "2.0",
  "info": {
    "title": "USERS Service API",
    "description": "API for managing users and ride operations",
    "version": "2.0",
    "contact": {
      "name": "Yandex Go Project Team",
      "url": "https://github.com/GameXost/YandexGo_proj",
      "email": "sergejs.dyldin@yandex.ru"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Client"
    }
  ],
  "host": "localhost:9093",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/driver/{id}": {
      "get": {
        "summary": "get info about your driver",
        "operationId": "getDriverInfo",
        "responses": {
          "200": {
            "description": "drinver info received successfully",
            "schema": {
              "$ref": "#/definitions/client_serviceDriver"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Driver unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "driver"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/driver/{id}/location": {
      "get": {
        "summary": "getting driver location lat, lon",
        "operationId": "getDriverLocation",
        "responses": {
          "200": {
            "description": "driver location received successfully",
            "schema": {
              "$ref": "#/definitions/client_serviceLocation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Driver unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "location"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/ride/history": {
      "get": {
        "summary": "Get history of last rides",
        "operationId": "get rides history",
        "responses": {
          "200": {
            "description": "rides history received successfully",
            "schema": {
              "$ref": "#/definitions/client_serviceRideHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User unique identifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "rides"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/ride/request": {
      "post": {
        "summary": "request a ride",
        "operationId": "requestRide",
        "responses": {
          "200": {
            "description": "Ride request made properly",
            "schema": {
              "$ref": "#/definitions/client_serviceRide"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/client_serviceRideRequest"
            }
          }
        ],
        "tags": [
          "rides"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/ride/{id}": {
      "get": {
        "summary": "get ride information",
        "operationId": "getCurrentRide",
        "responses": {
          "200": {
            "description": "Successfully received ride status",
            "schema": {
              "$ref": "#/definitions/client_serviceRide"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "rides"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/ride/{id}/cancel": {
      "post": {
        "summary": "Cancel ride",
        "operationId": "cancelRide",
        "responses": {
          "200": {
            "description": "Ride canceled successfully",
            "schema": {
              "$ref": "#/definitions/client_serviceStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Ride unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "rides"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/profile": {
      "get": {
        "summary": "Get user profile",
        "operationId": "getUserProfile",
        "responses": {
          "200": {
            "description": "successfully returned user profile",
            "schema": {
              "$ref": "#/definitions/client_serviceUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update user profile",
        "operationId": "updateUserProfile",
        "responses": {
          "200": {
            "description": "Successfully updated user profile",
            "schema": {
              "$ref": "#/definitions/client_serviceUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/client_serviceUpdateProfileRequest"
            }
          }
        ],
        "tags": [
          "user"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "client_serviceDriver": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "current driver's uniq identificator"
        },
        "username": {
          "type": "string",
          "description": "current driver's firstname"
        },
        "phone": {
          "type": "string",
          "description": "your driver's phone number"
        },
        "carModel": {
          "type": "string",
          "description": "driver's car model"
        },
        "location": {
          "$ref": "#/definitions/client_serviceLocation",
          "description": "lat and lon"
        },
        "carMake": {
          "type": "string",
          "description": "car make"
        },
        "carNumber": {
          "type": "string",
          "description": "plate number"
        },
        "carColor": {
          "type": "string",
          "description": "car color"
        }
      }
    },
    "client_serviceLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "example": 55.112313,
          "description": "latitude"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": 55.1341,
          "description": "longitude"
        }
      }
    },
    "client_serviceRide": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uniq id of the ride"
        },
        "userId": {
          "type": "string",
          "description": "user's id"
        },
        "driverId": {
          "type": "string",
          "description": "driver's id"
        },
        "startLocation": {
          "$ref": "#/definitions/client_serviceLocation",
          "description": "strart point coodrinates"
        },
        "endLocation": {
          "$ref": "#/definitions/client_serviceLocation",
          "description": "end point coodrinates"
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "in_progress",
            "completed",
            "canceled"
          ],
          "description": "ride status"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "description": "starting time point"
        }
      }
    },
    "client_serviceRideHistoryResponse": {
      "type": "object",
      "properties": {
        "rides": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/client_serviceRide"
          },
          "description": "List of past rides"
        }
      }
    },
    "client_serviceRideRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User's unique identifier"
        },
        "startLocation": {
          "$ref": "#/definitions/client_serviceLocation",
          "description": "Pickup coordinates"
        },
        "endLocation": {
          "$ref": "#/definitions/client_serviceLocation",
          "description": "Drop-off coordinates"
        }
      }
    },
    "client_serviceStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "description": "Operation success flag"
        },
        "message": {
          "type": "string",
          "description": "Additional details or error message"
        }
      }
    },
    "client_serviceUpdateProfileRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uniq id of user"
        },
        "username": {
          "type": "string",
          "description": "user's firstname"
        },
        "phone": {
          "type": "string",
          "description": "user's phone number"
        },
        "email": {
          "type": "string",
          "description": "user's email address"
        }
      }
    },
    "client_serviceUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uniq user identificator"
        },
        "username": {
          "type": "string",
          "description": "user's firstname"
        },
        "email": {
          "type": "string",
          "description": "user's email"
        },
        "phone": {
          "type": "string",
          "description": "user's phone number"
        }
      },
      "title": "основные структуры"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "JWT token as: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
