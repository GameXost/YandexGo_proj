/*
USERS Service API

API for managing users and ride operations

API version: 2.0
Contact: sergejs.dyldin@yandex.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the ClientServiceRideRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientServiceRideRequest{}

// ClientServiceRideRequest struct for ClientServiceRideRequest
type ClientServiceRideRequest struct {
	// User's unique identifier
	UserId *string `json:"userId,omitempty"`
	StartLocation *ClientServiceLocation `json:"startLocation,omitempty"`
	EndLocation *ClientServiceLocation `json:"endLocation,omitempty"`
}

// NewClientServiceRideRequest instantiates a new ClientServiceRideRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientServiceRideRequest() *ClientServiceRideRequest {
	this := ClientServiceRideRequest{}
	return &this
}

// NewClientServiceRideRequestWithDefaults instantiates a new ClientServiceRideRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientServiceRideRequestWithDefaults() *ClientServiceRideRequest {
	this := ClientServiceRideRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ClientServiceRideRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientServiceRideRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ClientServiceRideRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ClientServiceRideRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetStartLocation returns the StartLocation field value if set, zero value otherwise.
func (o *ClientServiceRideRequest) GetStartLocation() ClientServiceLocation {
	if o == nil || IsNil(o.StartLocation) {
		var ret ClientServiceLocation
		return ret
	}
	return *o.StartLocation
}

// GetStartLocationOk returns a tuple with the StartLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientServiceRideRequest) GetStartLocationOk() (*ClientServiceLocation, bool) {
	if o == nil || IsNil(o.StartLocation) {
		return nil, false
	}
	return o.StartLocation, true
}

// HasStartLocation returns a boolean if a field has been set.
func (o *ClientServiceRideRequest) HasStartLocation() bool {
	if o != nil && !IsNil(o.StartLocation) {
		return true
	}

	return false
}

// SetStartLocation gets a reference to the given ClientServiceLocation and assigns it to the StartLocation field.
func (o *ClientServiceRideRequest) SetStartLocation(v ClientServiceLocation) {
	o.StartLocation = &v
}

// GetEndLocation returns the EndLocation field value if set, zero value otherwise.
func (o *ClientServiceRideRequest) GetEndLocation() ClientServiceLocation {
	if o == nil || IsNil(o.EndLocation) {
		var ret ClientServiceLocation
		return ret
	}
	return *o.EndLocation
}

// GetEndLocationOk returns a tuple with the EndLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientServiceRideRequest) GetEndLocationOk() (*ClientServiceLocation, bool) {
	if o == nil || IsNil(o.EndLocation) {
		return nil, false
	}
	return o.EndLocation, true
}

// HasEndLocation returns a boolean if a field has been set.
func (o *ClientServiceRideRequest) HasEndLocation() bool {
	if o != nil && !IsNil(o.EndLocation) {
		return true
	}

	return false
}

// SetEndLocation gets a reference to the given ClientServiceLocation and assigns it to the EndLocation field.
func (o *ClientServiceRideRequest) SetEndLocation(v ClientServiceLocation) {
	o.EndLocation = &v
}

func (o ClientServiceRideRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientServiceRideRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.StartLocation) {
		toSerialize["startLocation"] = o.StartLocation
	}
	if !IsNil(o.EndLocation) {
		toSerialize["endLocation"] = o.EndLocation
	}
	return toSerialize, nil
}

type NullableClientServiceRideRequest struct {
	value *ClientServiceRideRequest
	isSet bool
}

func (v NullableClientServiceRideRequest) Get() *ClientServiceRideRequest {
	return v.value
}

func (v *NullableClientServiceRideRequest) Set(val *ClientServiceRideRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClientServiceRideRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClientServiceRideRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientServiceRideRequest(val *ClientServiceRideRequest) *NullableClientServiceRideRequest {
	return &NullableClientServiceRideRequest{value: val, isSet: true}
}

func (v NullableClientServiceRideRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientServiceRideRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


